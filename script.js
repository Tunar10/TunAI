async function sendMessage() {
  const userInput = document.getElementById('userInput').value.trim();
  const responseDiv = document.getElementById('response');
  if (!userInput) {
    responseDiv.innerText = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å.";
    return;
  }
  responseDiv.innerHTML = "‚è≥ TunAI –¥—É–º–∞–µ—Ç...";

  try {
    const res = await fetch("https://api-inference.huggingface.co/models/mistralai/Mistral-7B-Instruct-v0.1", {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
        // –ë–µ–∑ API-–∫–ª—é—á–∞ - –ø—É–±–ª–∏—á–Ω—ã–π –¥–æ—Å—Ç—É–ø
      },
      body: JSON.stringify({ inputs: userInput })
    });

    if (!res.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${res.status}`);
    }

    const data = await res.json();

    // –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –º–æ–¥–µ–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –º–∞—Å—Å–∏–≤ —Å generated_text
    let reply = "";
    if (Array.isArray(data) && data.length > 0) {
      reply = data[0].generated_text || "ü§ñ –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞";
    } else if (data.generated_text) {
      reply = data.generated_text;
    } else {
      reply = "ü§ñ –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞";
    }

    responseDiv.innerText = reply;
  } catch (err) {
    console.error(err);
    responseDiv.innerText = "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ –ò–ò. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.";
  }
}